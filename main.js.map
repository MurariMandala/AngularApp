{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport {FormGroup,FormControl,Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularapp3';\n  statusMsg:any;\n  isSucccess:boolean;\n  isFail:boolean;\n  onSubmit(data){\n   // this.username=data.username;\n   alert(\"alert\");\n\n  }\n  loginForm=new FormGroup({\n    username:new FormControl('',Validators.required),\n    lastname:new FormControl('',Validators.required),\n    phoneno:new FormControl('',Validators.required),\n    email:new FormControl('',Validators.required),\n    dob:new FormControl('',Validators.required),\n    password:new FormControl('',Validators.required),\n    confirmpassword:new FormControl('',Validators.required)\n  })\n  \n  onLogin(){\n    if(this.loginForm.value.password==this.loginForm.value.confirmpassword){\n      this.statusMsg='Successfully Registered... : '+this.loginForm.value.username;\n      this.isSucccess=true;\n      this.isFail=false;\n      this.loginForm.reset();\n\n    }else{\n      this.statusMsg='Password Must be Same '\n      this.isFail=true;\n      this.isSucccess=false;\n    }\n    \n   console.warn(this.statusMsg);\n   console.warn(\"PassWordLength : \"+this.loginForm.value.password.length);\n    console.warn(this.loginForm.value.username);\n    console.warn(this.loginForm.value);\n  }\n  get username(){return this.loginForm.get('username')}\n  get lastname(){return this.loginForm.get('lastname')}\n  get phoneno(){return this.loginForm.get('phoneno')}\n  get email(){return this.loginForm.get('email')}\n  get dob(){return this.loginForm.get('dob')}\n  get address(){return this.loginForm.get('address')}\n  get city(){return this.loginForm.get('city')}\n  get state(){return this.loginForm.get('state')}\n  get password(){return this.loginForm.get('password')}\n  get confirmpassword(){return this.loginForm.get('confirmpassword')}\n}\n","\n<div *ngIf=isSucccess class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n  <strong>Success : </strong> {{statusMsg}} \n  <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div *ngIf=isFail class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n  <strong>Fail : </strong> PassWord and Confirm PassWord must be same.\n  <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<h2>User Registration Form</h2>\n<div class=\"col-4\">\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">First name</label>\n      <input type=\"text\" class=\"form-control\" pattern=\"[a-zA-Z]+\"formControlName=\"username\" name=\"username\" placeholder=\"Enter Username\">\n      <span class=\"error\" *ngIf=\"username.invalid && username.touched\">First name is required (Allow only alphabets)</span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">Last name</label>\n      <input type=\"text\" class=\"form-control\" pattern=\"[a-zA-Z]+\" formControlName=\"lastname\" name=\"lastname\" placeholder=\"Enter Username\">\n      <span class=\"error\" *ngIf=\"lastname.invalid && lastname.touched\">Last name is required (Allow only alphabets)</span>\n    </div>  \n    <div class=\"form-group\">\n      <label for=\"exampleInputPassword1\">Mobile No</label>\n      <input type=\"text\" class=\"form-control\" pattern=\"[1-9]{1}[0-9]{9}\" formControlName=\"phoneno\" name=\"phoneno\" placeholder=\"Mobile No\">\n      <span class=\"error\" *ngIf=\"phoneno.invalid && phoneno.touched\">Mobile no is invalid</span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">Email</label>\n      <input type=\"text\" class=\"form-control\" pattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" formControlName=\"email\" name=\"email\" placeholder=\"Enter Email Id\">\n      <span class=\"error\" *ngIf=\"email.invalid && email.touched\">Valid Email is required</span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">DOB</label>\n      <input type=\"date\" class=\"form-control\" formControlName=\"dob\" name=\"dob\" >\n      <span class=\"error\" *ngIf=\"dob.invalid && dob.touched\">DOB is required</span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">Address</label>\n      <input type=\"text\" class=\"form-control\" name=\"address\" placeholder=\"Enter Address\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">City</label>\n      <input type=\"text\" class=\"form-control\" name=\"city\" placeholder=\"Enter City\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">State</label>\n      <input type=\"text\" class=\"form-control\" name=\"state\" placeholder=\"Enter State\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">PassWord</label>\n      <input type=\"password\" class=\"form-control\" minlength=\"8\" name=\"password\" formControlName=\"password\" placeholder=\"Enter PassWord\">\n      <span class=\"error\" *ngIf=\"password.invalid && password.touched\">PassWord is required (Min Length='8')</span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">Confirm PassWord</label>\n      <input type=\"password\" class=\"form-control\" minlength=\"8\" name=\"confirmpassword\" formControlName=\"confirmpassword\" placeholder=\"ReEnter PassWord\">\n      <span class=\"error\" *ngIf=\"confirmpassword.invalid && confirmpassword.touched\">Confirm PassWord is required (Min Length='8')</span>\n    </div>\n    <button [disabled]=\"loginForm.invalid\" type=\"submit\" class=\"btn btn-primary\">Login</button>\n  </form>\n  </div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}